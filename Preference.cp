#include "BarObjects.hpp"#include "TabText.hpp"short PopUpItems(Experiment *expt, Rect box, Point *pt,short currItem);Boolean SetPreference(Experiment *expt);#define PREFDIAL 144#define OK 1#define CANCEL 2#define NOPREF 3#define PREF 4#define SOLN 5#define WATER  6Boolean SetPreference(Experiment *expt) {	DialogPtr d;	short item;	Rect popsolnbox,popwaterbox;	Handle itemhandle;	short itemkind;	Boolean hasPreference;	unsigned long soln_item,water_item;	Point pt;	char text[50];	ItemType *soln,*water;		if (expt == NULL) return(FALSE);	// get the dialog from the resource file	d = GetNewDialog(PREFDIAL,0L,(WindowPtr)-1L);		hasPreference = expt->HasPreference();		if (hasPreference) {			expt->GetPreference(&soln_item,&water_item);		soln = expt->GetAnItem(soln_item);		water = expt->GetAnItem(water_item);	}	else {			soln = NULL;		water = NULL;			}		if (soln != NULL) {		strcpy(text,soln->name);	}	else sprintf(text,"<none>");	SetDText(d,SOLN,text);	if (soln != NULL) {		strcpy(text,water->name);	}	else sprintf(text,"<none>");	SetDText(d,WATER,text);		SetDControl(d,PREF,hasPreference);	SetDControl(d,NOPREF,!hasPreference);		GetDItem(d,SOLN,&itemkind,&itemhandle,&popsolnbox);		GetDItem(d,WATER,&itemkind,&itemhandle,&popwaterbox);		SetPort(d);	DrawDialog(d);	MFrame(&popsolnbox);	MFrame(&popwaterbox);		FrameDefault(d);		do {			ModalDialog(0L,&item);				switch (item) {							case NOPREF:				hasPreference = FALSE;				SetDControl(d,PREF,hasPreference);				SetDControl(d,NOPREF,!hasPreference);				break;			case PREF:				hasPreference = TRUE;				SetDControl(d,PREF,hasPreference);				SetDControl(d,NOPREF,!hasPreference);				break;							case SOLN:				GetMouse(&pt);				soln_item = PopUpItems(expt,popsolnbox,&pt,soln_item);				if (soln_item != -1) {					soln = expt->GetAnItem(soln_item);					if (soln != NULL) {						strcpy(text,soln->name);					}					else sprintf(text,"<none>");					SetDText(d,SOLN,text);				}				SetPort(d);				DrawDialog(d);				MFrame(&popsolnbox);				MFrame(&popwaterbox);				FrameDefault(d);				break;			case WATER:				GetMouse(&pt);				water_item = PopUpItems(expt,popwaterbox,&pt,water_item);				if (water_item != -1) {					water = expt->GetAnItem(water_item);					if (soln != NULL) {						strcpy(text,water->name);					}					else sprintf(text,"<none>");					SetDText(d,WATER,text);				}				SetPort(d);				DrawDialog(d);				MFrame(&popsolnbox);				MFrame(&popwaterbox);				FrameDefault(d);				break;							case CANCEL:				DisposDialog(d);				return (FALSE);				break;				}	} while (item != OK);			expt->SetPreference(hasPreference,soln_item,water_item);		DisposDialog(d);	return(TRUE);}#define POPITEM_MENU 144short PopUpItems(Experiment *expt, Rect box, Point *pt,short currItem) {	long result;	Point popPt;	// set up the menu	char text[256];	short i;	short menuID;	MenuHandle menu;	ItemType *item;	unsigned long num_items;		// note: add 1 to item index because menus are 1 indexed	// note: add newOffset = 2 if the "New" item and separator line are being used.						menuID = POPITEM_MENU;		sprintf(text,"Items");CtoPstr(text);	menu = NewMenu(menuID,(unsigned char *)text);				// set up menu of expts:	num_items = expt->GetNumItems();		for (i=0;i<num_items;i++) {			// have to insert a dummy text name, then reset the name		// to avoid control character stuff.		sprintf(text ,"Dummy");		CtoPstr(text);		AppendMenu(menu,(unsigned char *)text);				item = expt->GetAnItem(i);				strcpy(text,item->name);		CtoPstr(text);		SetItem(menu,i+1,(unsigned char *)text);	//	SetItemCmd(menu, currItem+1,0x1e);		// have to use set item to get any slashes to appear correctly				}			popPt.h = (short)box.left;	popPt.v = (short)box.top + (   (((short)pt->v - (short)box.top)/ 16) * 16);	LocalToGlobal(&popPt);	InsertMenu(menu,-1);	result = PopUpMenuSelect(menu,popPt.v,popPt.h,currItem + 1);		DeleteMenu(menuID);		item = NULL;	currItem = -1;	if (HiWord(result) == menuID) {		currItem = LoWord(result) - 1;								if (currItem >= 0) {							if (currItem < num_items) {									item = expt->GetAnItem(currItem);								}				else currItem = -1;							}			else currItem = -1;			}		return(currItem);	}