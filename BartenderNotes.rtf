{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset0 Anonymous;\f2\fswiss\fcharset0 ArialMT;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red35\green110\blue37;\red31\green31\blue31;\red255\green0\blue6;
\red137\green19\blue21;\red118\green15\blue80;\red0\green0\blue255;\red51\green51\blue51;\red228\green124\blue72;
\red0\green73\blue139;\red0\green101\blue195;}
\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf0 \
Notes:\
\
Labels\
Barcoded "label" on the bottles:\
\pard\tx640\pardeftab640\pardirnatural

\f1 \cf2 \CocoaLigature0 format [ExptAbbr] [Subject Number] [ItemCode]\
e.g. "GB009F" would be subject#9, experiment "GB", "F"ood item\
\
The barcode should be of the format\

\f0 \cf0 \CocoaLigature1 *
\f1 \cf2 \CocoaLigature0 [ExptAbbr] [Subject Number] [ItemCode]*\
because the barcode readers use asterices to detect beginning and end of a scanned string
\f0 \cf0 \CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\
Serial Interface:\
\
(2012-8-20 -- may need to get newer serial- usb adaptor.)\
\
Keyspan USA-28XB  http://www.tripplite.com/en/products/model.cfm?txtModelID=3914\
\
install "Keyspan Driver for USA-19HS_v2.6"\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \strike \strikec0 "
\f2 Driver for UPR-112G, USA-49WG, USA-28XG & USA-19HS (Mac OS X 10.6.x) "
\f0 \
http://www.tripplite.com/shared/software/Driver/Keyspan%20Driver%20for%20USA-19HS_v2.6.4%20(Mac%20OS%20X%2010.6.x).zip\strike0\striked0 \
\
driver location on 2012-12-12:\
\pard\pardeftab720\sa60

\f2 \cf3 "Driver for USA-19HS (Mac OS X 10.6.x to 10.8.x)"\
\pard\pardeftab720\sa60

\f0 \cf0 http://www.tripplite.com/shared/software/Driver/Driver%20for%20USA-19HS_v2.6.4%20(Mac%20OS%20X%2010.6.x%20to%2010.8.x).zip\
\pard\pardeftab720\sa60

\f2 \cf3 \
\pard\pardeftab720\sa60

\f0 \cf0 \
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f3\b\fs22 \cf0 Version 2.6 - 
\i\b0\fs18 Beta Released 09 1 2009\

\f0\i0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 From the driver info screen:\
\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs28 \cf0 \ul \ulc4 API / PORT NAMING SCHEME
\fs18 \ulnone \
This driver provides serial services through the POSIX API.  The names of the two example serial ports are:\
\
  - /dev/tty.USA28XG<geo>P1  -- or -- /dev/cu.USA28XG<geo>P1\
  - /dev/tty.USA28XG<geo>P2  -- or -- /dev/cu.USA28XG<geo>P2\
  - /dev/tty.KeySerial1     -- or -- /dev/cu.KeySerial1\
\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs22 \cf0 \ul USA28XG\ulnone  
\fs18 is the model number of the adapter being used. \
\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li840\fi-840\pardirnatural

\fs22 \cf0 \ul <geo>
\fs18 \ulnone  is the 2 or more digit geographical name.  A typical port name will be USA28X\ul 913\ulnone P1 (e.g. "913" means USB bus #9, host hub port #1 and external hub port #3).\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li840\fi-840\pardirnatural

\fs22 \cf0 \ul Px
\fs18 \ulnone  is the port number on the specific adapter.  In the example shown P1 is port 1 on the USA-28X adapter.  P2 is port 2, etc.  \
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li840\fi-840\pardirnatural

\fs22 \cf0 \ul KeySerial1
\fs18 \ulnone  is an alias to the first port on the first Keyspan adapter connected to your computer.  In the example shown above, KeySerial is the pointer to USA28XG<geo>P1.  Note, you will only have one KeySerial1 port regardless of how many different adapters are connected to your computer.\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
Note that using the "cu" ports allows you to open() the port with a normal\
blocking call and it doesn't wait on DCD.  Open()ing the "tty" port waits for DCD high unless O_NONBLOCK is used.\
\
See the 'man' page on 'termios' as well as /sys/termios.h\
\

\fs28 \ul SERIAL FEATURES
\fs18 \ulnone \
The Keyspan USB/Serial driver supports all POSIX serial port features described in termios, subject to the following details and limitations:\
\
\pard\tx360\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 1. Baud rates up to 230400 (on USA-28XG, USA-19HS); \
\
2. Xon/Xoff flow control on all devices\
\
3. CTS/DTR hardware flow control on all devices\
\
4. RTS/DSR hardware flow control on devices with DB9 connector (USA-19HS; \
	USA-49WG, UPR-112G)\
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
\pard\tx240\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\li360\fi-360\pardirnatural
\cf0 5. Modem control on all available signals (input: CTS and DCD, output: DTR on USA-28XG).  (input: CTS, DSR, RI and DCD, output: RTS, DTR on	USA-19HS and USA-49WG)  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 \
//---------------------------------------------------------------\
\
\
According to classic version:\
\
Sartorious Balance Settings\
\
RS232C settings:\
\pard\tx640\pardeftab640\pardirnatural

\f1 \cf0 \CocoaLigature0 two settings appear in the original BarTender code?\
baud9600 | stop10 | oddParity | data7\
baud9600 | stop20 | noParity | data8\
\
\
Command Strings:\
RequestWeight	\cf5 "\\33P\\r\\n"\cf0 \
Tare	\cf5 "\\33T\\r\\n"\cf0 \
SetVeryStable	\cf5 "\\33K\\r\\n"\
\cf0 SetStable	\cf5 "\\33L\\r\\n"\cf0 \
SetUnstable	\cf5 "\\33M\\r\\n"\cf0 \
SetVeryUnstable	\cf5 "\\33N\\r\\n"\
\
\pard\tx640\pardeftab640\pardirnatural
\cf2 Decode of sartorious weight string\
char direction\
float weight\
char units\
"<direction> <weight> <units>\\r"\
\pard\tx640\pardeftab640\pardirnatural
\cf0 <direction> is a single character \
'+' if a positive value\
'-' if a negative value\
\
<weight> is a floating point number for the weight.\
\
<units> is a single character (?I think it's single character, it is for 'g' at any rate)\
representing the units the balance is using. We expect 'g' for grams, of course.\
\
line is terminated with a '\\r' character\
\
so when we get a line from the balance, we simply parse with sscanf:\
\
	sscanf(last_entry,\cf5 "%s %lf"\cf0 , &direction, &curr_weight);\
\pard\tx640\pardeftab640\pardirnatural
\cf6 	if\cf0  (direction[\cf7 0\cf0 ] == \cf7 '-'\cf0 ) \{ curr_weight *= -\cf7 1.0\cf0 ; \}\cf5 \
\pard\tx640\pardeftab640\pardirnatural
\cf0 \
Stable vs. Unstable reading:\
Sartorious flags a stable reading by including the unit of measurement in the weight as the last character of the weight string.\
E.g., if the weight is requested and the balance returns the string "+ 423.5 g", with the last character of 'g', then the weight is stable. If the returned string is "+ 432.5" with a numeric last character of '5'  (and without the 'g'), then the weight is unstable.\
\
\
Serial Port Notes:\
Need to include IOKit Framework\
link on accessing serial ports from terminal, useful for debugging:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \CocoaLigature1 http://www.tigoe.net/pcomp/resources/archives/avr/000749.shtml\
\pard\tx640\pardeftab640\pardirnatural

\f1 \cf0 \CocoaLigature0 \
\
class Balance: NSObject\
\
Instantiate a balance when the application is first run? Created by "BarDocument" that has the big buttons for weigh on and weigh off?\
\
\
Daily Data commands\
\
"close" linked to "Save and Print"\
\
\
Future features:\
sparklines for last umpteen days on the daily data printout\
upload graphs to web site\
RSS feed that data has been updated\
\
templates for experiments\
\
\
require an "unassigned" group, like in xynk?\
\
\
File Structure:\
\
\
\
~/Documents/Bartender\
	/Experiments\
			AA.barexpt\
			AA_cumul.xls\
			AA_groups.png // graphs of the data\
		\
	/DailyData\
		/AA\
			AA.onweights // the most recent ON-weights, waiting to be weighed off\
			AA 2009-9-15.weights // previous days\
			AA 2009-9-14.weights\
			AA 2009-9-13.weights\
		/AB\
		/AC\
\
	/Archived // experiments and daily data not in active use are moved here...\
		/XX\
		/YY\
		/ZZ\
\
Future feature: create an alias to the Bartender directory on the desktop for convenience?\
\
\
\
DailyData Weighing Workflow\
\
1. User presses either "Weigh On" or "Weigh Off" button\
2. DailyData window is instantiated, with currentState set to either "kWeighingOn" or "kWeighingOff"\
3. User scans the label of the first item. This action sends \cf8 labelStringEntered message.\cf0 \
4. \cf8 labelStringEntered tries to read the label by calling parseLabelString\
\
	parseLabelString is a heavy function:\
\
	i. If this is the first label to be scanned\
			DailyData doesn't have an assigned experiment\
			theExperiment == nil\
			\cf0 (if we have already set an Experiment, then go to ii.)\
			\cf8 \
		a. get the experiment code from the label\
		b. check with the BarDocument to see if the code matches an extant experiment - post error if not such expt (& clear label)\
		c. having found a matching experiment, setTheExperiment to the matching experiment\
			"setTheExperiment" will \
			i. allocate memory for the weights array\
			ii. set up the columns in the tableview for on weights, and off weights, delta, and preference if weighing off\
			iii. check to see if there is a matching ".onweights" file\
			iv. the existance of an onweights file means that we should be collecting the off weights\
			v. if there is  ".onweights" file and the currentState is  \cf0 "kWeighingOn", post an error \cf8 (& clear label)\cf0 \
			vi. \cf8 if there is not an ".onweights" file and the currentState is  \cf0 "kWeighingOff", post an error \cf8 (& clear label)\cf0 \
			vii.  \cf8 if there is an ".onweights" file and the currentState is  \cf0 "kWeighingOn", \
					then load the existing "on weights" into the dailyday weights arrays\
			\
	\
	ii. next, parse the label to get the ratIndex and the itemIndex\
	\
		a. check if valid subject number\
		b. check if valid item code\
\
5. labelStringEntered gets the current weight from the balance\
	i. make sure that weight is stable -- try \cf9 kNumWeightTries (e.g. 20 times); post warning if weight doesn't stabilize & clear label\
	ii. check the weight to m ake sure a) it is within min and max weight for that item type, and b) it is not same as the last weight (could be duplication error). -- post warning but accept weight\
	\cf0 \
6. labelStingEntered assigns the weight value to the itemIndex of ratIndex\
7. labelStingEntered  calls selectTableRowAtIndex\cf8 	to highlight and make visible the rat in the dailyView table\
8. 	\cf0 labelStringEntered asks the dailyView table to reload its data, in order to update the screen\
9.  wait for the next label to be scanned; go back to 3\
10. The user can stop weighing by pressing several buttons:\
\
	\
\
Send summary as an email:\
EdMessage with BSD license:\
http://www.mulle-kybernetik.com/software/EDFrameworks/Documentation/EDMessage/Classes/EDMailAgent.html\
\
Growl uses a \cf8 Python script to send email (by 
\f3\fs32 \cf10 \CocoaLigature1 Peter Hosey, 
\f1\fs24 \cf8 \CocoaLigature0 Creative Commons Attribution):\
\cf0 \
http://stackoverflow.com/questions/1619731/send-email-through-a-cocoa-application\
\
"
\f2\fs28 \CocoaLigature1 What I ended up doing was writing a Python script to send the message using Python's smtplib module. {\field{\*\fldinst{HYPERLINK "https://bitbucket.org/boredzo/simple-mailer/src/"}}{\fldrslt \cf11 Here's the script}}, under a BSD license. We use NSTask to run the python interpreter and give the script to it, and NSPipe to give the password and message body to the script. You can run the script from the command line with the --help option to see how to run it."\
\pard\tx640\pardeftab640\pardirnatural

\f1\fs24 \cf8 \CocoaLigature0 \
https://bitbucket.org/boredzo/simple-mailer/src/\
\
\
\
DailyData Document: Weight is updated every kUpdateWeightDisplayInterval seconds (= 0.1 sec). If weight is unstable, no units are shown. If weight is stable, then "g" added to end of weights\
\
DailyData file is given date/time stamp in local timezone, although internally time is recorded in GMT\
\
missing weights are encoded as the number \cf9 MISSINGWGT (= -32000) --  left over from old Circadia data files...\cf8 \
\
Notes on Preference:\
\
preference is calculated as either ratio of item 1 to item 2 (i.e. saccharin / water)\
or as ratio of item 1 over total intake of items 1 and 2 (i.e. saccharin / (saccharin + water)\
total intake is sum of item 1 and item 2 intake\
\
if either item1 or item 2 is missing, then preference and total are not calculated\
if either item 1 or item 2 is negative, then preference and total are not calculated\
if the denominator is zero (causing a divide by zero error), then preference and total are not calculated (i.e. saccharin / water = 0)\
\
\pard\tx640\pardeftab640\pardirnatural
\cf0 \
\
}